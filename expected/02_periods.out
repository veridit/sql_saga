/* Run tests as unprivileged user */
SET ROLE TO sql_saga_unprivileged_user;
/* Basic period definitions with dates */
CREATE TABLE basic (val text, s date, e date);
TABLE sql_saga.era;
 table_schema | table_name | era_name | start_after_column_name | stop_on_column_name | range_type | bounds_check_constraint | audit_table_oid 
--------------+------------+----------+-------------------------+---------------------+------------+-------------------------+-----------------
(0 rows)

SELECT sql_saga.add_era('basic', 's', 'e', 'bp');
 add_era 
---------
 t
(1 row)

TABLE sql_saga.era;
 table_schema | table_name | era_name | start_after_column_name | stop_on_column_name | range_type | bounds_check_constraint | audit_table_oid 
--------------+------------+----------+-------------------------+---------------------+------------+-------------------------+-----------------
 public       | basic      | bp       | s                       | e                   | daterange  | basic_bp_check          | 
(1 row)

SELECT sql_saga.drop_era('basic', 'bp');
 drop_era 
----------
 t
(1 row)

TABLE sql_saga.era;
 table_schema | table_name | era_name | start_after_column_name | stop_on_column_name | range_type | bounds_check_constraint | audit_table_oid 
--------------+------------+----------+-------------------------+---------------------+------------+-------------------------+-----------------
(0 rows)

SELECT sql_saga.add_era('basic', 's', 'e', 'bp', bounds_check_constraint => 'c');
 add_era 
---------
 t
(1 row)

TABLE sql_saga.era;
 table_schema | table_name | era_name | start_after_column_name | stop_on_column_name | range_type | bounds_check_constraint | audit_table_oid 
--------------+------------+----------+-------------------------+---------------------+------------+-------------------------+-----------------
 public       | basic      | bp       | s                       | e                   | daterange  | c                       | 
(1 row)

SELECT sql_saga.drop_era('basic', 'bp', cleanup => true);
 drop_era 
----------
 t
(1 row)

TABLE sql_saga.era;
 table_schema | table_name | era_name | start_after_column_name | stop_on_column_name | range_type | bounds_check_constraint | audit_table_oid 
--------------+------------+----------+-------------------------+---------------------+------------+-------------------------+-----------------
(0 rows)

SELECT sql_saga.add_era('basic', 's', 'e', 'bp');
 add_era 
---------
 t
(1 row)

TABLE sql_saga.era;
 table_schema | table_name | era_name | start_after_column_name | stop_on_column_name | range_type | bounds_check_constraint | audit_table_oid 
--------------+------------+----------+-------------------------+---------------------+------------+-------------------------+-----------------
 public       | basic      | bp       | s                       | e                   | daterange  | basic_bp_check          | 
(1 row)

/* Test constraints */
INSERT INTO basic (val, s, e) VALUES ('x', null, null); --fail
ERROR:  null value in column "s" of relation "basic" violates not-null constraint
DETAIL:  Failing row contains (x, null, null).
INSERT INTO basic (val, s, e) VALUES ('x', '3000-01-01', null); --fail
ERROR:  null value in column "e" of relation "basic" violates not-null constraint
DETAIL:  Failing row contains (x, 01-01-3000, null).
INSERT INTO basic (val, s, e) VALUES ('x', null, '1000-01-01'); --fail
ERROR:  null value in column "s" of relation "basic" violates not-null constraint
DETAIL:  Failing row contains (x, null, 01-01-1000).
INSERT INTO basic (val, s, e) VALUES ('x', '3000-01-01', '1000-01-01'); --fail
ERROR:  new row for relation "basic" violates check constraint "basic_bp_check"
DETAIL:  Failing row contains (x, 01-01-3000, 01-01-1000).
INSERT INTO basic (val, s, e) VALUES ('x', '1000-01-01', '3000-01-01'); --success
TABLE basic;
 val |     s      |     e      
-----+------------+------------
 x   | 01-01-1000 | 01-01-3000
(1 row)

/* Test dropping the whole thing */
DROP TABLE basic;
TABLE sql_saga.era;
 table_schema | table_name | era_name | start_after_column_name | stop_on_column_name | range_type | bounds_check_constraint | audit_table_oid 
--------------+------------+----------+-------------------------+---------------------+------------+-------------------------+-----------------
(0 rows)

