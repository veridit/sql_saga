/* Run tests as unprivileged user */
SET ROLE TO sql_saga_unprivileged_user;
/* DDL on unrelated tables should not be affected */
CREATE TABLE unrelated(a int);
ALTER TABLE unrelated RENAME a TO b;
DROP TABLE unrelated;
/*
 * If anything we store as "name" is renamed, we need to update our catalogs or
 * throw an error.
 */
/* era */
CREATE TABLE rename_test(col1 text, col2 bigint, col3 time, s integer, e integer);
SELECT sql_saga.add_era('rename_test', 's', 'e', 'p');
 add_era 
---------
 t
(1 row)

TABLE sql_saga.era;
 table_schema | table_name  | era_name | start_after_column_name | stop_on_column_name | range_type | bounds_check_constraint | audit_table_oid 
--------------+-------------+----------+-------------------------+---------------------+------------+-------------------------+-----------------
 public       | rename_test | p        | s                       | e                   | int4range  | rename_test_p_check     | 
(1 row)

ALTER TABLE rename_test RENAME s TO start;
ALTER TABLE rename_test RENAME e TO "end";
TABLE sql_saga.era;
 table_schema | table_name  | era_name | start_after_column_name | stop_on_column_name | range_type | bounds_check_constraint | audit_table_oid 
--------------+-------------+----------+-------------------------+---------------------+------------+-------------------------+-----------------
 public       | rename_test | p        | start                   | end                 | int4range  | rename_test_p_check     | 
(1 row)

ALTER TABLE rename_test RENAME start TO "s < e";
TABLE sql_saga.era;
 table_schema | table_name  | era_name | start_after_column_name | stop_on_column_name | range_type | bounds_check_constraint | audit_table_oid 
--------------+-------------+----------+-------------------------+---------------------+------------+-------------------------+-----------------
 public       | rename_test | p        | s < e                   | end                 | int4range  | rename_test_p_check     | 
(1 row)

ALTER TABLE rename_test RENAME "end" TO "embedded "" symbols";
TABLE sql_saga.era;
 table_schema | table_name  | era_name | start_after_column_name | stop_on_column_name | range_type | bounds_check_constraint | audit_table_oid 
--------------+-------------+----------+-------------------------+---------------------+------------+-------------------------+-----------------
 public       | rename_test | p        | s < e                   | embedded " symbols  | int4range  | rename_test_p_check     | 
(1 row)

ALTER TABLE rename_test RENAME CONSTRAINT rename_test_p_check TO start_before_end;
TABLE sql_saga.era;
 table_schema | table_name  | era_name | start_after_column_name | stop_on_column_name | range_type | bounds_check_constraint | audit_table_oid 
--------------+-------------+----------+-------------------------+---------------------+------------+-------------------------+-----------------
 public       | rename_test | p        | s < e                   | embedded " symbols  | int4range  | start_before_end        | 
(1 row)

/* api */
ALTER TABLE rename_test ADD COLUMN id integer PRIMARY KEY;
SELECT sql_saga.add_api('rename_test', 'p');
 add_api 
---------
 t
(1 row)

TABLE sql_saga.api_view;
 table_schema | table_name  | era_name |           view_oid            |   trigger_name   
--------------+-------------+----------+-------------------------------+------------------
 public       | rename_test | p        | rename_test__for_portion_of_p | for_portion_of_p
(1 row)

ALTER TRIGGER for_portion_of_p ON rename_test__for_portion_of_p RENAME TO portion_trigger;
TABLE sql_saga.api_view;
 table_schema | table_name  | era_name |           view_oid            |  trigger_name   
--------------+-------------+----------+-------------------------------+-----------------
 public       | rename_test | p        | rename_test__for_portion_of_p | portion_trigger
(1 row)

SELECT sql_saga.drop_api('rename_test', 'p');
 drop_api 
----------
 t
(1 row)

ALTER TABLE rename_test DROP COLUMN id;
/* unique_keys */
SELECT sql_saga.add_unique_key('rename_test', ARRAY['col2', 'col1', 'col3'], 'p');
        add_unique_key        
------------------------------
 rename_test_col2_col1_col3_p
(1 row)

TABLE sql_saga.unique_keys;
       unique_key_name        | table_schema | table_name  |   column_names   | era_name |                    unique_constraint                    |            exclude_constraint             
------------------------------+--------------+-------------+------------------+----------+---------------------------------------------------------+-------------------------------------------
 rename_test_col2_col1_col3_p | public       | rename_test | {col2,col1,col3} | p        | rename_test_col2_col1_col3_s < e_embedded " symbols_key | rename_test_col2_col1_col3_int4range_excl
(1 row)

ALTER TABLE rename_test RENAME COLUMN col1 TO "COLUMN1";
ALTER TABLE rename_test RENAME CONSTRAINT "rename_test_col2_col1_col3_s < e_embedded "" symbols_key" TO unconst;
ALTER TABLE rename_test RENAME CONSTRAINT rename_test_col2_col1_col3_int4range_excl TO exconst;
TABLE sql_saga.unique_keys;
       unique_key_name        | table_schema | table_name  |    column_names     | era_name | unique_constraint | exclude_constraint 
------------------------------+--------------+-------------+---------------------+----------+-------------------+--------------------
 rename_test_col2_col1_col3_p | public       | rename_test | {col2,COLUMN1,col3} | p        | unconst           | exconst
(1 row)

/* foreign_keys */
CREATE TABLE rename_test_ref (LIKE rename_test);
SELECT sql_saga.add_era('rename_test_ref', 's < e', 'embedded " symbols', 'q');
 add_era 
---------
 t
(1 row)

TABLE sql_saga.era;
 table_schema |   table_name    | era_name | start_after_column_name | stop_on_column_name | range_type | bounds_check_constraint | audit_table_oid 
--------------+-----------------+----------+-------------------------+---------------------+------------+-------------------------+-----------------
 public       | rename_test     | p        | s < e                   | embedded " symbols  | int4range  | start_before_end        | 
 public       | rename_test_ref | q        | s < e                   | embedded " symbols  | int4range  | rename_test_ref_q_check | 
(2 rows)

SELECT sql_saga.add_foreign_key('rename_test_ref', ARRAY['col2', 'COLUMN1', 'col3'], 'q', 'rename_test_col2_col1_col3_p');
           add_foreign_key           
-------------------------------------
 rename_test_ref_col2_COLUMN1_col3_q
(1 row)

TABLE sql_saga.foreign_keys;
          foreign_key_name           | table_schema |   table_name    |    column_names     | era_name |       unique_key_name        | match_type | update_action | delete_action |               fk_insert_trigger               |               fk_update_trigger               |               uk_update_trigger               |               uk_delete_trigger               
-------------------------------------+--------------+-----------------+---------------------+----------+------------------------------+------------+---------------+---------------+-----------------------------------------------+-----------------------------------------------+-----------------------------------------------+-----------------------------------------------
 rename_test_ref_col2_COLUMN1_col3_q | public       | rename_test_ref | {col2,COLUMN1,col3} | q        | rename_test_col2_col1_col3_p | SIMPLE     | NO ACTION     | NO ACTION     | rename_test_ref_col2_COLUMN1_col3_q_fk_insert | rename_test_ref_col2_COLUMN1_col3_q_fk_update | rename_test_ref_col2_COLUMN1_col3_q_uk_update | rename_test_ref_col2_COLUMN1_col3_q_uk_delete
(1 row)

ALTER TABLE rename_test_ref RENAME COLUMN "COLUMN1" TO col1; -- fails
ERROR:  cannot drop or rename column "COLUMN1" on table "rename_test_ref" because it is used in era foreign key "rename_test_ref_col2_COLUMN1_col3_q"
CONTEXT:  PL/pgSQL function sql_saga.rename_following() line 240 at RAISE
ALTER TRIGGER "rename_test_ref_col2_COLUMN1_col3_q_fk_insert" ON rename_test_ref RENAME TO fk_insert;
ERROR:  cannot drop or rename trigger "rename_test_ref_col2_COLUMN1_col3_q_fk_insert" on table "rename_test_ref" because it is used in an era foreign key "rename_test_ref_col2_COLUMN1_col3_q"
CONTEXT:  PL/pgSQL function sql_saga.rename_following() line 275 at RAISE
ALTER TRIGGER "rename_test_ref_col2_COLUMN1_col3_q_fk_update" ON rename_test_ref RENAME TO fk_update;
ERROR:  cannot drop or rename trigger "rename_test_ref_col2_COLUMN1_col3_q_fk_update" on table "rename_test_ref" because it is used in an era foreign key "rename_test_ref_col2_COLUMN1_col3_q"
CONTEXT:  PL/pgSQL function sql_saga.rename_following() line 275 at RAISE
ALTER TRIGGER "rename_test_ref_col2_COLUMN1_col3_q_uk_update" ON rename_test RENAME TO uk_update;
ERROR:  cannot drop or rename trigger "rename_test_ref_col2_COLUMN1_col3_q_uk_update" on table "rename_test" because it is used in an era foreign key "rename_test_ref_col2_COLUMN1_col3_q"
CONTEXT:  PL/pgSQL function sql_saga.rename_following() line 275 at RAISE
ALTER TRIGGER "rename_test_ref_col2_COLUMN1_col3_q_uk_delete" ON rename_test RENAME TO uk_delete;
ERROR:  cannot drop or rename trigger "rename_test_ref_col2_COLUMN1_col3_q_uk_delete" on table "rename_test" because it is used in an era foreign key "rename_test_ref_col2_COLUMN1_col3_q"
CONTEXT:  PL/pgSQL function sql_saga.rename_following() line 275 at RAISE
TABLE sql_saga.foreign_keys;
          foreign_key_name           | table_schema |   table_name    |    column_names     | era_name |       unique_key_name        | match_type | update_action | delete_action |               fk_insert_trigger               |               fk_update_trigger               |               uk_update_trigger               |               uk_delete_trigger               
-------------------------------------+--------------+-----------------+---------------------+----------+------------------------------+------------+---------------+---------------+-----------------------------------------------+-----------------------------------------------+-----------------------------------------------+-----------------------------------------------
 rename_test_ref_col2_COLUMN1_col3_q | public       | rename_test_ref | {col2,COLUMN1,col3} | q        | rename_test_col2_col1_col3_p | SIMPLE     | NO ACTION     | NO ACTION     | rename_test_ref_col2_COLUMN1_col3_q_fk_insert | rename_test_ref_col2_COLUMN1_col3_q_fk_update | rename_test_ref_col2_COLUMN1_col3_q_uk_update | rename_test_ref_col2_COLUMN1_col3_q_uk_delete
(1 row)

SELECT sql_saga.drop_foreign_key('rename_test_ref','rename_test_ref_col2_COLUMN1_col3_q');
 drop_foreign_key 
------------------
 t
(1 row)

SELECT sql_saga.drop_unique_key('rename_test', 'rename_test_col2_col1_col3_p');
 drop_unique_key 
-----------------
 
(1 row)

DROP TABLE rename_test;
SELECT sql_saga.drop_era('rename_test_ref','q');
 drop_era 
----------
 t
(1 row)

DROP TABLE rename_test_ref;
