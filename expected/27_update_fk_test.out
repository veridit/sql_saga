SELECT enable_sql_saga_for_shifts_houses_and_rooms();
 enable_sql_saga_for_shifts_houses_and_rooms 
---------------------------------------------
 
(1 row)

INSERT INTO houses VALUES
  (1, 150000, '2015-01-01'::TIMESTAMPTZ, '2016-01-01'::TIMESTAMPTZ),
  (1, 200000, '2016-01-01'::TIMESTAMPTZ, '2017-01-01'::TIMESTAMPTZ),
  (2, 300000, '2015-01-01'::TIMESTAMPTZ, '2016-01-01'::TIMESTAMPTZ),
  (3, 100000, '2014-01-01'::TIMESTAMPTZ, '2015-01-01'::TIMESTAMPTZ),
  (3, 200000, '2015-01-01'::TIMESTAMPTZ, 'infinity'::TIMESTAMPTZ),
  (4, 200000, '-infinity'::TIMESTAMPTZ, '2014-01-01'::TIMESTAMPTZ)
;
-- You can update an fk id to NULL
INSERT INTO rooms VALUES (1, 1, '2015-01-01'::TIMESTAMPTZ, '2015-06-01'::TIMESTAMPTZ);
UPDATE rooms SET house_id = NULL;
DELETE FROM rooms;
-- You can update the range when the fk is NULL
INSERT INTO rooms VALUES (1, NULL, '2015-01-01'::TIMESTAMPTZ, '2015-06-01'::TIMESTAMPTZ);
UPDATE rooms SET (valid_after, valid_to) = ('1999-01-01'::TIMESTAMPTZ, '2000-01-01');
DELETE FROM rooms;
-- You can update a finite fk exactly covered by one row
INSERT INTO rooms VALUES (1, 1, '2015-01-01'::TIMESTAMPTZ, '2015-02-01'::TIMESTAMPTZ);
UPDATE rooms SET (valid_after, valid_to) = ('2015-01-01'::TIMESTAMPTZ, '2016-01-01');
DELETE FROM rooms;
-- You can update a finite fk more than covered by one row
INSERT INTO rooms VALUES (1, 1, '2015-01-01'::TIMESTAMPTZ, '2015-02-01'::TIMESTAMPTZ);
UPDATE rooms SET (valid_after, valid_to) = ('2015-01-01'::TIMESTAMPTZ, '2015-06-01');
DELETE FROM rooms;
-- You can update a finite fk exactly covered by two rows
INSERT INTO rooms VALUES (1, 1, '2015-01-01'::TIMESTAMPTZ, '2015-02-01'::TIMESTAMPTZ);
UPDATE rooms SET (valid_after, valid_to) = ('2015-01-01'::TIMESTAMPTZ, '2017-01-01');
DELETE FROM rooms;
-- You can update a finite fk more than covered by two rows
INSERT INTO rooms VALUES (1, 1, '2015-01-01'::TIMESTAMPTZ, '2015-02-01'::TIMESTAMPTZ);
UPDATE rooms SET (valid_after, valid_to) = ('2015-01-01'::TIMESTAMPTZ, '2016-06-01');
DELETE FROM rooms;
-- You can't update a finite fk id not covered by any row
INSERT INTO rooms VALUES (1, 1, '2015-01-01'::TIMESTAMPTZ, '2015-02-01'::TIMESTAMPTZ);
UPDATE rooms SET house_id = 7;
ERROR:  insert or update on table "rooms" violates foreign key constraint "rooms_house_id_valid"
CONTEXT:  PL/pgSQL function sql_saga.validate_foreign_key_new_row(jsonb,name,regclass,text,text,text[],text,text,text,regclass,text,text,text[],text,text,text,sql_saga.fk_match_types,sql_saga.fk_actions,sql_saga.fk_actions) line 96 at RAISE
SQL statement "SELECT sql_saga.validate_foreign_key_new_row(jnew, foreign_key_name, fk_table_oid, fk_schema_name, fk_table_name, fk_column_names, fk_era_name, fk_start_after_column_name, fk_stop_on_column_name, uk_table_oid, uk_schema_name, uk_table_name, uk_column_names, uk_era_name, uk_start_after_column_name, uk_stop_on_column_name, match_type, update_action, delete_action)"
PL/pgSQL function sql_saga.fk_update_check() line 37 at PERFORM
DELETE FROM rooms;
-- You can't update a finite fk range not covered by any row
INSERT INTO rooms VALUES (1, 1, '2015-01-01'::TIMESTAMPTZ, '2015-02-01'::TIMESTAMPTZ);
UPDATE rooms SET (valid_after, valid_to) = ('1999-01-01'::TIMESTAMPTZ, '2000-01-01');
ERROR:  insert or update on table "rooms" violates foreign key constraint "rooms_house_id_valid"
CONTEXT:  PL/pgSQL function sql_saga.validate_foreign_key_new_row(jsonb,name,regclass,text,text,text[],text,text,text,regclass,text,text,text[],text,text,text,sql_saga.fk_match_types,sql_saga.fk_actions,sql_saga.fk_actions) line 96 at RAISE
SQL statement "SELECT sql_saga.validate_foreign_key_new_row(jnew, foreign_key_name, fk_table_oid, fk_schema_name, fk_table_name, fk_column_names, fk_era_name, fk_start_after_column_name, fk_stop_on_column_name, uk_table_oid, uk_schema_name, uk_table_name, uk_column_names, uk_era_name, uk_start_after_column_name, uk_stop_on_column_name, match_type, update_action, delete_action)"
PL/pgSQL function sql_saga.fk_update_check() line 37 at PERFORM
DELETE FROM rooms;
-- You can't update a finite fk partially covered by one row
INSERT INTO rooms VALUES (1, 1, '2015-01-01'::TIMESTAMPTZ, '2015-02-01'::TIMESTAMPTZ);
UPDATE rooms SET (valid_after, valid_to) = ('2014-01-01'::TIMESTAMPTZ, '2015-06-01');
ERROR:  insert or update on table "rooms" violates foreign key constraint "rooms_house_id_valid"
CONTEXT:  PL/pgSQL function sql_saga.validate_foreign_key_new_row(jsonb,name,regclass,text,text,text[],text,text,text,regclass,text,text,text[],text,text,text,sql_saga.fk_match_types,sql_saga.fk_actions,sql_saga.fk_actions) line 96 at RAISE
SQL statement "SELECT sql_saga.validate_foreign_key_new_row(jnew, foreign_key_name, fk_table_oid, fk_schema_name, fk_table_name, fk_column_names, fk_era_name, fk_start_after_column_name, fk_stop_on_column_name, uk_table_oid, uk_schema_name, uk_table_name, uk_column_names, uk_era_name, uk_start_after_column_name, uk_stop_on_column_name, match_type, update_action, delete_action)"
PL/pgSQL function sql_saga.fk_update_check() line 37 at PERFORM
DELETE FROM rooms;
-- You can't update a finite fk partially covered by two rows
INSERT INTO rooms VALUES (1, 1, '2015-01-01'::TIMESTAMPTZ, '2015-02-01'::TIMESTAMPTZ);
UPDATE rooms SET (valid_after, valid_to) = ('2014-01-01'::TIMESTAMPTZ, '2016-06-01');
ERROR:  insert or update on table "rooms" violates foreign key constraint "rooms_house_id_valid"
CONTEXT:  PL/pgSQL function sql_saga.validate_foreign_key_new_row(jsonb,name,regclass,text,text,text[],text,text,text,regclass,text,text,text[],text,text,text,sql_saga.fk_match_types,sql_saga.fk_actions,sql_saga.fk_actions) line 96 at RAISE
SQL statement "SELECT sql_saga.validate_foreign_key_new_row(jnew, foreign_key_name, fk_table_oid, fk_schema_name, fk_table_name, fk_column_names, fk_era_name, fk_start_after_column_name, fk_stop_on_column_name, uk_table_oid, uk_schema_name, uk_table_name, uk_column_names, uk_era_name, uk_start_after_column_name, uk_stop_on_column_name, match_type, update_action, delete_action)"
PL/pgSQL function sql_saga.fk_update_check() line 37 at PERFORM
DELETE FROM rooms;
-- You can update an infinite fk exactly covered by one row
INSERT INTO rooms VALUES (1, 3, '2015-01-01'::TIMESTAMPTZ, '2015-02-01'::TIMESTAMPTZ);
UPDATE rooms SET (valid_after, valid_to) = ('2015-01-01'::TIMESTAMPTZ, 'infinity');
DELETE FROM rooms;
-- You can update an infinite fk more than covered by one row
INSERT INTO rooms VALUES (1, 3, '2015-01-01'::TIMESTAMPTZ, '2015-02-01'::TIMESTAMPTZ);
UPDATE rooms SET (valid_after, valid_to) = ('2016-01-01'::TIMESTAMPTZ, 'infinity');
DELETE FROM rooms;
-- You can update an infinite fk exactly covered by two rows
INSERT INTO rooms VALUES (1, 3, '2015-01-01'::TIMESTAMPTZ, '2015-02-01'::TIMESTAMPTZ);
UPDATE rooms SET (valid_after, valid_to) = ('2014-01-01'::TIMESTAMPTZ, 'infinity');
DELETE FROM rooms;
-- You can update an infinite fk more than covered by two rows
INSERT INTO rooms VALUES (1, 3, '2015-01-01'::TIMESTAMPTZ, '2015-02-01'::TIMESTAMPTZ);
UPDATE rooms SET (valid_after, valid_to) = ('2014-06-01'::TIMESTAMPTZ, 'infinity');
DELETE FROM rooms;
-- You can't update an infinite fk id not covered by any row
INSERT INTO rooms VALUES (1, 3, '2015-01-01'::TIMESTAMPTZ, '2015-02-01'::TIMESTAMPTZ);
UPDATE rooms SET house_id = 7;
ERROR:  insert or update on table "rooms" violates foreign key constraint "rooms_house_id_valid"
CONTEXT:  PL/pgSQL function sql_saga.validate_foreign_key_new_row(jsonb,name,regclass,text,text,text[],text,text,text,regclass,text,text,text[],text,text,text,sql_saga.fk_match_types,sql_saga.fk_actions,sql_saga.fk_actions) line 96 at RAISE
SQL statement "SELECT sql_saga.validate_foreign_key_new_row(jnew, foreign_key_name, fk_table_oid, fk_schema_name, fk_table_name, fk_column_names, fk_era_name, fk_start_after_column_name, fk_stop_on_column_name, uk_table_oid, uk_schema_name, uk_table_name, uk_column_names, uk_era_name, uk_start_after_column_name, uk_stop_on_column_name, match_type, update_action, delete_action)"
PL/pgSQL function sql_saga.fk_update_check() line 37 at PERFORM
DELETE FROM rooms;
-- You can't update an infinite fk range not covered by any row
INSERT INTO rooms VALUES (1, 1, '2015-01-01'::TIMESTAMPTZ, '2015-02-01'::TIMESTAMPTZ);
UPDATE rooms SET (valid_after, valid_to) = ('2020-01-01'::TIMESTAMPTZ, 'infinity');
ERROR:  insert or update on table "rooms" violates foreign key constraint "rooms_house_id_valid"
CONTEXT:  PL/pgSQL function sql_saga.validate_foreign_key_new_row(jsonb,name,regclass,text,text,text[],text,text,text,regclass,text,text,text[],text,text,text,sql_saga.fk_match_types,sql_saga.fk_actions,sql_saga.fk_actions) line 96 at RAISE
SQL statement "SELECT sql_saga.validate_foreign_key_new_row(jnew, foreign_key_name, fk_table_oid, fk_schema_name, fk_table_name, fk_column_names, fk_era_name, fk_start_after_column_name, fk_stop_on_column_name, uk_table_oid, uk_schema_name, uk_table_name, uk_column_names, uk_era_name, uk_start_after_column_name, uk_stop_on_column_name, match_type, update_action, delete_action)"
PL/pgSQL function sql_saga.fk_update_check() line 37 at PERFORM
DELETE FROM rooms;
-- You can't update an infinite fk partially covered by one row
INSERT INTO rooms VALUES (1, 4, '-infinity', '2012-01-01'::TIMESTAMPTZ);
UPDATE rooms SET (valid_after, valid_to) = ('-infinity', '2020-01-01');
ERROR:  insert or update on table "rooms" violates foreign key constraint "rooms_house_id_valid"
CONTEXT:  PL/pgSQL function sql_saga.validate_foreign_key_new_row(jsonb,name,regclass,text,text,text[],text,text,text,regclass,text,text,text[],text,text,text,sql_saga.fk_match_types,sql_saga.fk_actions,sql_saga.fk_actions) line 96 at RAISE
SQL statement "SELECT sql_saga.validate_foreign_key_new_row(jnew, foreign_key_name, fk_table_oid, fk_schema_name, fk_table_name, fk_column_names, fk_era_name, fk_start_after_column_name, fk_stop_on_column_name, uk_table_oid, uk_schema_name, uk_table_name, uk_column_names, uk_era_name, uk_start_after_column_name, uk_stop_on_column_name, match_type, update_action, delete_action)"
PL/pgSQL function sql_saga.fk_update_check() line 37 at PERFORM
DELETE FROM rooms;
-- You can't update an infinite fk partially covered by two rows
INSERT INTO rooms VALUES (1, 3, '2015-01-01'::TIMESTAMPTZ, '2015-02-01'::TIMESTAMPTZ);
UPDATE rooms SET (valid_after, valid_to) = ('1990-01-01'::TIMESTAMPTZ, 'infinity');
ERROR:  insert or update on table "rooms" violates foreign key constraint "rooms_house_id_valid"
CONTEXT:  PL/pgSQL function sql_saga.validate_foreign_key_new_row(jsonb,name,regclass,text,text,text[],text,text,text,regclass,text,text,text[],text,text,text,sql_saga.fk_match_types,sql_saga.fk_actions,sql_saga.fk_actions) line 96 at RAISE
SQL statement "SELECT sql_saga.validate_foreign_key_new_row(jnew, foreign_key_name, fk_table_oid, fk_schema_name, fk_table_name, fk_column_names, fk_era_name, fk_start_after_column_name, fk_stop_on_column_name, uk_table_oid, uk_schema_name, uk_table_name, uk_column_names, uk_era_name, uk_start_after_column_name, uk_stop_on_column_name, match_type, update_action, delete_action)"
PL/pgSQL function sql_saga.fk_update_check() line 37 at PERFORM
DELETE FROM rooms;
DELETE FROM rooms;
DELETE FROM houses;
SELECT disable_sql_saga_for_shifts_houses_and_rooms();
 disable_sql_saga_for_shifts_houses_and_rooms 
----------------------------------------------
 
(1 row)

