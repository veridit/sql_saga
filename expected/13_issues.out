/* Run tests as unprivileged user */
SET ROLE TO sql_saga_unprivileged_user;
/* https://github.com/xocolatl/periods/issues/27 */
CREATE TABLE uk(id integer, s integer, e integer);
SELECT sql_saga.add_era('uk', 's', 'e', 'p');
 add_era 
---------
 t
(1 row)

SELECT sql_saga.add_unique_key('uk', ARRAY['id'], 'p');
 add_unique_key 
----------------
 uk_id_p
(1 row)

CREATE TABLE fk(id integer, uk_id integer, s integer, e integer);
SELECT sql_saga.add_era('fk', 's', 'e', 'q');
 add_era 
---------
 t
(1 row)

SELECT sql_saga.add_unique_key('fk', ARRAY['id'], 'q');
 add_unique_key 
----------------
 fk_id_q
(1 row)

SELECT sql_saga.add_foreign_key('fk', ARRAY['uk_id'], 'q', 'uk_id_p');
 add_foreign_key 
-----------------
 fk_uk_id_q
(1 row)

--
TABLE sql_saga.periods;
ERROR:  relation "sql_saga.periods" does not exist
LINE 1: TABLE sql_saga.periods;
              ^
TABLE sql_saga.foreign_keys;
  key_name  | table_name | column_names | era_name | unique_key | match_type | delete_action | update_action |  fk_insert_trigger   |  fk_update_trigger   |  uk_update_trigger   |  uk_delete_trigger   
------------+------------+--------------+----------+------------+------------+---------------+---------------+----------------------+----------------------+----------------------+----------------------
 fk_uk_id_q | fk         | {uk_id}      | q        | uk_id_p    | SIMPLE     | NO ACTION     | NO ACTION     | fk_uk_id_q_fk_insert | fk_uk_id_q_fk_update | fk_uk_id_q_uk_update | fk_uk_id_q_uk_delete
(1 row)

--
INSERT INTO uk(id, s, e)        VALUES    (1, 1, 3),    (1, 3, 5);
INSERT INTO fk(id, uk_id, s, e) VALUES (1, 1, 1, 2), (2, 1, 2, 5);
TABLE uk;
 id | s | e 
----+---+---
  1 | 1 | 3
  1 | 3 | 5
(2 rows)

TABLE fk;
 id | uk_id | s | e 
----+-------+---+---
  1 |     1 | 1 | 2
  2 |     1 | 2 | 5
(2 rows)

--expected: fail
DELETE FROM uk WHERE (id, s, e) = (1, 1, 3);
ERROR:  update or delete on table "uk" violates foreign key constraint "fk_uk_id_q" on table "fk"
CONTEXT:  PL/pgSQL function sql_saga.validate_foreign_key_old_row(name,jsonb,boolean) line 163 at RAISE
SQL statement "SELECT sql_saga.validate_foreign_key_old_row(TG_ARGV[0], jold, false)"
PL/pgSQL function sql_saga.uk_delete_check() line 22 at PERFORM
TABLE uk;
 id | s | e 
----+---+---
  1 | 1 | 3
  1 | 3 | 5
(2 rows)

TABLE fk;
 id | uk_id | s | e 
----+-------+---+---
  1 |     1 | 1 | 2
  2 |     1 | 2 | 5
(2 rows)

--expected: fail
DELETE FROM uk WHERE (id, s, e) = (1, 3, 5);
ERROR:  update or delete on table "uk" violates foreign key constraint "fk_uk_id_q" on table "fk"
CONTEXT:  PL/pgSQL function sql_saga.validate_foreign_key_old_row(name,jsonb,boolean) line 163 at RAISE
SQL statement "SELECT sql_saga.validate_foreign_key_old_row(TG_ARGV[0], jold, false)"
PL/pgSQL function sql_saga.uk_delete_check() line 22 at PERFORM
INSERT INTO uk(id, s, e)        VALUES    (2, 1, 5);
INSERT INTO fk(id, uk_id, s, e) VALUES (4, 2, 2, 4);
TABLE uk;
 id | s | e 
----+---+---
  1 | 1 | 3
  1 | 3 | 5
  2 | 1 | 5
(3 rows)

TABLE fk;
 id | uk_id | s | e 
----+-------+---+---
  1 |     1 | 1 | 2
  2 |     1 | 2 | 5
  4 |     2 | 2 | 4
(3 rows)

--expected: fail
UPDATE uk SET e = 3 WHERE (id, s, e) = (2, 1, 5);
ERROR:  update or delete on table "uk" violates foreign key constraint "fk_uk_id_q" on table "fk"
CONTEXT:  PL/pgSQL function sql_saga.validate_foreign_key_old_row(name,jsonb,boolean) line 163 at RAISE
SQL statement "SELECT sql_saga.validate_foreign_key_old_row(TG_ARGV[0], jold, true)"
PL/pgSQL function sql_saga.uk_update_check() line 23 at PERFORM
TABLE uk;
 id | s | e 
----+---+---
  1 | 1 | 3
  1 | 3 | 5
  2 | 1 | 5
(3 rows)

TABLE fk;
 id | uk_id | s | e 
----+-------+---+---
  1 |     1 | 1 | 2
  2 |     1 | 2 | 5
  4 |     2 | 2 | 4
(3 rows)

-- Create non contiguous time
INSERT INTO uk(id, s, e)        VALUES    (3, 1, 3),
                                          (3, 4, 5);
-- Reference over non contiguous time - should fail
INSERT INTO fk(id, uk_id, s, e) VALUES (5, 3, 1, 5);
ERROR:  insert or update on table "fk" violates foreign key constraint "fk_uk_id_q"
CONTEXT:  PL/pgSQL function sql_saga.validate_foreign_key_new_row(name,jsonb) line 133 at RAISE
SQL statement "SELECT sql_saga.validate_foreign_key_new_row(TG_ARGV[0], jnew)"
PL/pgSQL function sql_saga.fk_insert_check() line 20 at PERFORM
-- Create overlappig range - should fail
INSERT INTO uk(id, s, e)        VALUES    (4, 1, 4),
                                          (4, 3, 5);
ERROR:  conflicting key value violates exclusion constraint "uk_id_int4range_excl"
DETAIL:  Key (id, int4range(s, e, '[)'::text))=(4, [3,5)) conflicts with existing key (id, int4range(s, e, '[)'::text))=(4, [1,4)).
DROP TABLE uk;
DROP TABLE fk;
