/* Run tests as unprivileged user */
SET ROLE TO sql_saga_unprivileged_user;
-- Unique keys are already pretty much guaranteed by the underlying features of
-- PostgreSQL, but test them anyway.
CREATE TABLE uk (id integer, valid_from integer, valid_until integer, CONSTRAINT uk_pkey PRIMARY KEY (id, valid_from, valid_until) DEFERRABLE);
SELECT sql_saga.add_era('uk', 'valid_from', 'valid_until', 'p');
 add_era 
---------
 t
(1 row)

SELECT sql_saga.add_unique_key('uk'::regclass, ARRAY['id'], 'p', unique_key_name => 'uk_id_p', unique_constraint => 'uk_pkey');
 add_unique_key 
----------------
 uk_id_p
(1 row)

TABLE sql_saga.unique_keys;
 unique_key_name | table_schema | table_name | column_names | era_name | unique_constraint |  exclude_constraint  
-----------------+--------------+------------+--------------+----------+-------------------+----------------------
 uk_id_p         | public       | uk         | {id}         | p        | uk_pkey           | uk_id_int4range_excl
(1 row)

INSERT INTO uk (id, valid_from, valid_until) VALUES (100, 2, 4), (100, 4, 5), (100, 5, 11); -- success
INSERT INTO uk (id, valid_from, valid_until) VALUES (200, 2, 4), (200, 4, 5), (200, 6, 11); -- success
INSERT INTO uk (id, valid_from, valid_until) VALUES (300, 2, 4), (300, 4, 6), (300, 5, 11); -- fail
ERROR:  conflicting key value violates exclusion constraint "uk_id_int4range_excl"
DETAIL:  Key (id, int4range(valid_from, valid_until))=(300, [5,11)) conflicts with existing key (id, int4range(valid_from, valid_until))=(300, [4,6)).
CREATE TABLE fk (id integer, uk_id integer, valid_from integer, valid_until integer, PRIMARY KEY (id));
SELECT sql_saga.add_era('fk', 'valid_from', 'valid_until', 'q');
 add_era 
---------
 t
(1 row)

SELECT sql_saga.add_foreign_key('fk', ARRAY['uk_id'], 'q', 'uk_id_p',
    foreign_key_name => 'fk_uk_id_q',
    fk_insert_trigger => 'fki',
    fk_update_trigger => 'fku',
    uk_update_trigger => 'uku',
    uk_delete_trigger => 'ukd');
 add_foreign_key 
-----------------
 fk_uk_id_q
(1 row)

TABLE sql_saga.foreign_keys;
 foreign_key_name | table_schema | table_name | column_names | era_name | unique_key_name | match_type | update_action | delete_action | fk_insert_trigger | fk_update_trigger | uk_update_trigger | uk_delete_trigger 
------------------+--------------+------------+--------------+----------+-----------------+------------+---------------+---------------+-------------------+-------------------+-------------------+-------------------
 fk_uk_id_q       | public       | fk         | {uk_id}      | q        | uk_id_p         | SIMPLE     | NO ACTION     | NO ACTION     | fki               | fku               | uku               | ukd
(1 row)

SELECT sql_saga.drop_foreign_key('fk', 'fk_uk_id_q');
 drop_foreign_key 
------------------
 t
(1 row)

SELECT sql_saga.add_foreign_key('fk', ARRAY['uk_id'], 'q', 'uk_id_p', foreign_key_name => 'fk_uk_id_q');
 add_foreign_key 
-----------------
 fk_uk_id_q
(1 row)

TABLE sql_saga.foreign_keys;
 foreign_key_name | table_schema | table_name | column_names | era_name | unique_key_name | match_type | update_action | delete_action |  fk_insert_trigger   |  fk_update_trigger   |  uk_update_trigger   |  uk_delete_trigger   
------------------+--------------+------------+--------------+----------+-----------------+------------+---------------+---------------+----------------------+----------------------+----------------------+----------------------
 fk_uk_id_q       | public       | fk         | {uk_id}      | q        | uk_id_p         | SIMPLE     | NO ACTION     | NO ACTION     | fk_uk_id_q_fk_insert | fk_uk_id_q_fk_update | fk_uk_id_q_uk_update | fk_uk_id_q_uk_delete
(1 row)

-- INSERT
INSERT INTO fk VALUES (0, 100, 1, 2); -- fail
ERROR:  insert or update on table "public.fk" violates foreign key constraint "fk_uk_id_q"
INSERT INTO fk VALUES (0, 100, 1, 11); -- fail
ERROR:  insert or update on table "public.fk" violates foreign key constraint "fk_uk_id_q"
INSERT INTO fk VALUES (0, 100, 2, 12); -- fail
ERROR:  insert or update on table "public.fk" violates foreign key constraint "fk_uk_id_q"
INSERT INTO fk VALUES (1, 100, 2, 4); -- success
INSERT INTO fk VALUES (2, 100, 2, 11); -- success
-- UPDATE
UPDATE fk SET valid_until = 21 WHERE id = 1; -- fail
ERROR:  insert or update on table "public.fk" violates foreign key constraint "fk_uk_id_q"
UPDATE fk SET valid_until = 7 WHERE id = 1; -- success
UPDATE uk SET valid_from = 3 WHERE (id, valid_from, valid_until) = (100, 2, 4); -- fail
ERROR:  update or delete on table "public.uk" violates foreign key constraint "fk_uk_id_q" on table "public.fk"
UPDATE uk SET valid_from = 1 WHERE (id, valid_from, valid_until) = (100, 2, 4); -- success
-- DELETE
DELETE FROM uk WHERE (id, valid_from, valid_until) = (100, 4, 5); -- fail
ERROR:  update or delete on table "public.uk" violates foreign key constraint "fk_uk_id_q" on table "public.fk"
DELETE FROM uk WHERE (id, valid_from, valid_until) = (200, 4, 6); -- success
DROP TABLE fk;
DROP TABLE uk;
