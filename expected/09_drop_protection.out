/* Run tests as unprivileged user */
SET ROLE TO sql_saga_unprivileged_user;
/* DDL on unrelated tables should not be affected */
CREATE TABLE unrelated();
DROP TABLE unrelated;
/* Make sure nobody drops the objects we keep track of in our catalogs. */
CREATE TYPE integerrange AS RANGE (SUBTYPE = integer);
CREATE TABLE dp (
    id bigint,
    s integer,
    e integer,
    x boolean
);
/* periods */
SELECT sql_saga.add_era('dp', 's', 'e', 'p', 'integerrange');
 add_era 
---------
 t
(1 row)

DROP TYPE integerrange;
ERROR:  cannot drop rangetype "public.integerrange" because it is used in period "p" on table "dp"
CONTEXT:  PL/pgSQL function sql_saga.drop_protection() line 56 at RAISE
/* api */
ALTER TABLE dp ADD CONSTRAINT dp_pkey PRIMARY KEY (id);
SELECT sql_saga.add_api('dp', 'p');
 add_api 
---------
 t
(1 row)

DROP VIEW dp__for_portion_of_p;
ERROR:  cannot drop view "public.dp__for_portion_of_p", call "sql_saga.drop_api()" instead
CONTEXT:  PL/pgSQL function sql_saga.drop_protection() line 137 at RAISE
DROP TRIGGER for_portion_of_p ON dp__for_portion_of_p;
ERROR:  cannot drop trigger "for_portion_of_p" on view "dp__for_portion_of_p" because it is used in FOR PORTION OF view for period "p" on table "dp"
CONTEXT:  PL/pgSQL function sql_saga.drop_protection() line 149 at RAISE
ALTER TABLE dp DROP CONSTRAINT dp_pkey;
ERROR:  cannot drop primary key on table "dp" because it has a FOR PORTION OF view for period "p"
CONTEXT:  PL/pgSQL function sql_saga.drop_protection() line 161 at RAISE
SELECT sql_saga.drop_api('dp', 'p');
 drop_api 
----------
 t
(1 row)

ALTER TABLE dp DROP CONSTRAINT dp_pkey;
/* unique_keys */
ALTER TABLE dp
    ADD CONSTRAINT u UNIQUE (id, s, e) DEFERRABLE,
    ADD CONSTRAINT x EXCLUDE USING gist (id WITH =, integerrange(s, e, '(]') WITH &&)  DEFERRABLE;
SELECT sql_saga.add_unique_key('dp', ARRAY['id'], 'p', 'k', 'u', 'x');
 add_unique_key 
----------------
 k
(1 row)

ALTER TABLE dp DROP CONSTRAINT u; -- fails
ERROR:  cannot drop constraint "u" on table "dp" because it is used in era unique key "k"
CONTEXT:  PL/pgSQL function sql_saga.drop_protection() line 182 at RAISE
ALTER TABLE dp DROP CONSTRAINT x; -- fails
ERROR:  cannot drop constraint "x" on table "dp" because it is used in era unique key "k"
CONTEXT:  PL/pgSQL function sql_saga.drop_protection() line 193 at RAISE
ALTER TABLE dp DROP CONSTRAINT dp_p_check; -- fails
/* foreign_keys */
CREATE TABLE dp_ref (LIKE dp);
SELECT sql_saga.add_era('dp_ref', 's', 'e', 'p', 'integerrange');
 add_era 
---------
 t
(1 row)

SELECT sql_saga.add_foreign_key('dp_ref', ARRAY['id'], 'p', 'k', foreign_key_name => 'f');
 add_foreign_key 
-----------------
 f
(1 row)

DROP TRIGGER f_fk_insert ON dp_ref; -- fails
ERROR:  cannot drop trigger "f_fk_insert" on table "dp_ref" because it is used in era foreign key "f"
CONTEXT:  PL/pgSQL function sql_saga.drop_protection() line 209 at RAISE
DROP TRIGGER f_fk_update ON dp_ref; -- fails
ERROR:  cannot drop trigger "f_fk_update" on table "dp_ref" because it is used in era foreign key "f"
CONTEXT:  PL/pgSQL function sql_saga.drop_protection() line 220 at RAISE
DROP TRIGGER f_uk_update ON dp; -- fails
ERROR:  cannot drop trigger "f_uk_update" on table "dp" because it is used in era foreign key "f"
CONTEXT:  PL/pgSQL function sql_saga.drop_protection() line 232 at RAISE
DROP TRIGGER f_uk_delete ON dp; -- fails
ERROR:  cannot drop trigger "f_uk_delete" on table "dp" because it is used in era foreign key "f"
CONTEXT:  PL/pgSQL function sql_saga.drop_protection() line 244 at RAISE
SELECT sql_saga.drop_foreign_key('dp_ref', 'f');
 drop_foreign_key 
------------------
 t
(1 row)

DROP TABLE dp_ref;
DROP TABLE dp;
DROP TYPE integerrange;
