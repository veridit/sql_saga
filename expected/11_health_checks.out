/* Run tests as unprivileged user */
SET ROLE TO sql_saga_unprivileged_user;
/* DDL on unrelated tables should not be affected */
CREATE UNLOGGED TABLE unrelated();
ALTER TABLE unrelated SET LOGGED;
ALTER TABLE unrelated SET UNLOGGED;
DROP TABLE unrelated;
/* Ensure tables with periods are persistent */
CREATE UNLOGGED TABLE log (id bigint, valid_from date, valid_until date);
SELECT sql_saga.add_era('log', 'valid_from', 'valid_until', 'p'); -- fails
ERROR:  table "log" must be persistent
CONTEXT:  PL/pgSQL function sql_saga.add_era(regclass,name,name,name,regtype,name) line 65 at RAISE
ALTER TABLE log SET LOGGED;
SELECT sql_saga.add_era('log', 'valid_from', 'valid_until', 'p'); -- passes
 add_era 
---------
 t
(1 row)

ALTER TABLE log SET UNLOGGED; -- fails
ERROR:  table "log" must remain persistent because it has an era
CONTEXT:  PL/pgSQL function sql_saga.health_checks() line 36 at RAISE
DROP TABLE log;
